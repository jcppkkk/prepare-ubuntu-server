#!/bin/bash
# curl -sL http://git.io/uinit | bash

__script_env()
{
	DEFAULT_REPO=$(sed -n '/^deb /{s/.*\(http:[^ ]*\).*/\1/p;q}' /etc/apt/sources.list)
	hash apt-get 2>/dev/null && PKGCMD=apt-get
	hash apt 2>/dev/null && PKGCMD=apt
	hash aptitude 2>/dev/null && PKGCMD=aptitude
	echo "================================"
	export DEBIAN_FRONTEND=noninteractive
	printf '%-20s %s\n' package-command	$PKGCMD
	printf '%-20s %s\n' apt-repository	${APT_REPO_URL:=${1:-$DEFAULT_REPO}}
	printf '%-20s %s\n' sudo-nopass-User 	${SudoNopass_User:=${SUDO_USER}}
	printf '%-20s %s\n' sudo-config		${SudoNopass_Config:=/etc/sudoers.d/50_${SUDO_USER}_sh}
	echo "================================"
	echo "If you want change settings, press Ctrl-C now."
	echo "Sleep 5 seconds..."
	sleep 5
}

LOCAL_FILENAME=prepare-ubuntu-server.sh
__download_to_local()
{
	# allow local edit
	if [[ ! -f "$0" ]]; then
		echo "Download setup.sh to PWD..."
		curl -sL http://git.io/uinit > $LOCAL_FILENAME
		chmod u+x $LOCAL_FILENAME
		exec bash $LOCAL_FILENAME "$@"
	fi
}
__ensure_sudo()
{
	if (( $(id -u) != 0 )); then
		exec sudo -H bash "$0" "$@"
	fi
}

__system_setup_repo()
{
	if [ -e /etc/lsb-release ]; then
		source /etc/lsb-release
		cat <<-EOF > /etc/apt/sources.list
		deb $APT_REPO_URL $DISTRIB_CODENAME main restricted universe multiverse
		deb $APT_REPO_URL $DISTRIB_CODENAME-security main restricted universe multiverse
		deb $APT_REPO_URL $DISTRIB_CODENAME-updates main restricted universe multiverse
		deb $APT_REPO_URL $DISTRIB_CODENAME-backports main restricted universe multiverse
		deb-src $APT_REPO_URL $DISTRIB_CODENAME main restricted universe multiverse
		deb-src $APT_REPO_URL $DISTRIB_CODENAME-security main restricted universe multiverse
		deb-src $APT_REPO_URL $DISTRIB_CODENAME-updates main restricted universe multiverse
		deb-src $APT_REPO_URL $DISTRIB_CODENAME-backports main restricted universe multiverse
		EOF
	fi
}

__system_setup_repo_comment()
{
	if [ -e /etc/lsb-release ]; then
		source /etc/lsb-release
		cat <<-EOF >> /etc/apt/sources.list
		# $(date --rfc-3339=seconds) Auto generated by jcppkkk/prepare-ubuntu-server
		EOF
	fi
}

__system_setup_sudo_nopass()
{
	if ! grep -q "^#includedir.*/etc/sudoers.d" /etc/sudoers;then
		echo "#includedir /etc/sudoers.d" >> /etc/sudoers
	fi
	(
		umask 226
		echo "$SudoNopass_User ALL=(ALL) NOPASSWD:ALL" > "$SudoNopass_Config"
	)
}
__pip()
{
	curl --silent --show-error --retry 5 https://bootstrap.pypa.io/get-pip.py | sudo python2.7
}
__system_config_tz()
{
	__pip
	pip install -U tzupdate
	tzupdate
}

Unattended_Upgrades()
{
	echo unattended-upgrades unattended-upgrades/enable_auto_updates boolean true | debconf-set-selections
	dpkg-reconfigure -plow unattended-upgrades
	sed -ri "s/\/\/(.*-updates.*)/\1/" /etc/apt/apt.conf.d/50unattended-upgrades
	cat <<-EOF > /etc/apt/apt.conf.d/10periodic
	APT::Periodic::Update-Package-Lists "1";
	APT::Periodic::Download-Upgradeable-Packages "1";
	APT::Periodic::Unattended-Upgrade "1";
	APT::Periodic::AutocleanInterval "7";
	Unattended-Upgrade::Remove-Unused-Dependencies "true";
	EOF
}

__system_install_etckepper()
{
	if ! grep '^VCS="git"' /etc/etckeeper/etckeeper.conf; then
		yes | etckeeper uninit
		pushd /etc
		sed -i -e 's/^VCS="bzr"/VCS="git"/g' etckeeper.conf
		etckeeper init
		popd /etc
	fi
	if ! git config --global user.name; then
		git config --global user.name "root"
	fi
	if ! git config --global user.email; then
		git config --global user.email "root@$(hostname)"
	fi
}
__purge_old_kernels()
{
	if [[ -n "$(\which purge-old-kernels)" ]]; then
		ln -fs $(\which purge-old-kernels) /etc/cron.daily/
		purge-old-kernels
	fi
}

# Update source list to local mirror

__download_to_local $@
__ensure_sudo $@
__script_env $@
__system_setup_sudo_nopass
__system_setup_repo

$PKGCMD -yq update
$PKGCMD install -y unattended-upgrades ntp git etckeeper
__system_install_etckepper
__system_config_tz
__system_setup_repo_comment

__purge_old_kernels

$PKGCMD autoremove
$PKGCMD full-upgrade -y

# Misc setting
su - ${SUDO_USER} -c "grep -q 'EDITOR=vim' ~/.bashrc || echo 'EDITOR=vim' >> ~/.bashrc"
