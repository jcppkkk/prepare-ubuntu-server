#!/bin/bash
# curl -sL http://git.io/uinit | bash

__script_env()
{
	DEFAULT_REPO=$(sed -n '/^deb /{s/.*\(http:[^ ]*\).*/\1/p;q}' /etc/apt/sources.list)
	echo "================================"
	export DEBIAN_FRONTEND=noninteractive
	printf '%-20s %s\n' APT_REPO_URL \
		"${APT_REPO_URL:=${1:-$DEFAULT_REPO}}";
	printf '%-20s %s\n' SudoNopass_User \
		${SudoNopass_User:=${SUDO_USER}}
	printf '%-20s %s\n' SudoNopass_Config \
		${SudoNopass_Config:=/etc/sudoers.d/50_${SUDO_USER}_sh}
	echo "================================"
}

__script_bootstrap()
{
	# allow local edit
	if [[ ! -f "$0" ]]; then
		echo "Download uinit to PWD..."
		curl -sL http://git.io/uinit > uinit
		chmod u+x uinit
		echo "If you want change settings, press Ctrl-C now."
		echo "Sleep 5 seconds..."
		sleep 5
		exec sudo -H bash uinit "$@"
	fi

	if (( $(id -u) != 0 )); then
		exec sudo -H bash "$0" "$@"
	fi
}

__system_setup_repo()
{
	if [ -e /etc/lsb-release ]; then
		source /etc/lsb-release
		cat <<-EOF > /etc/apt/sources.list
		deb $APT_REPO_URL $DISTRIB_CODENAME main restricted universe multiverse
		deb $APT_REPO_URL $DISTRIB_CODENAME-security main restricted universe multiverse
		deb $APT_REPO_URL $DISTRIB_CODENAME-updates main restricted universe multiverse
		deb $APT_REPO_URL $DISTRIB_CODENAME-backports main restricted universe multiverse
		deb-src $APT_REPO_URL $DISTRIB_CODENAME main restricted universe multiverse
		deb-src $APT_REPO_URL $DISTRIB_CODENAME-security main restricted universe multiverse
		deb-src $APT_REPO_URL $DISTRIB_CODENAME-updates main restricted universe multiverse
		deb-src $APT_REPO_URL $DISTRIB_CODENAME-backports main restricted universe multiverse
		EOF
	fi
}

__system_setup_repo_comment()
{
	if [ -e /etc/lsb-release ]; then
		source /etc/lsb-release
		cat <<-EOF >> /etc/apt/sources.list
		# $(date --rfc-3339=seconds) Auto generated by jcppkkk/prepare-ubuntu-server
		EOF
	fi
}

__system_setup_sudo_nopass()
{
	if ! grep -q "^#includedir.*/etc/sudoers.d" /etc/sudoers;then
		echo "#includedir /etc/sudoers.d" >> /etc/sudoers
	fi
	( 
		umask 226
		echo "$SudoNopass_User ALL=(ALL) NOPASSWD:ALL" > "$SudoNopass_Config"
	)
}
__system_config_tz()
{
	apt-get install -y python-pip
	pip install -U tzupdate
	tzupdate
}

Unattended_Upgrades()
{
	echo unattended-upgrades unattended-upgrades/enable_auto_updates boolean true | debconf-set-selections
	dpkg-reconfigure -plow unattended-upgrades
	sed -ri "s/\/\/(.*-updates.*)/\1/" /etc/apt/apt.conf.d/50unattended-upgrades
	cat <<-EOF > /etc/apt/apt.conf.d/10periodic
	APT::Periodic::Update-Package-Lists "1";
	APT::Periodic::Download-Upgradeable-Packages "1";
	APT::Periodic::Unattended-Upgrade "1";
	APT::Periodic::AutocleanInterval "7";
	Unattended-Upgrade::Remove-Unused-Dependencies "true";
	EOF
}

__system_install_etckepper()
{
	if ! grep '^VCS="git"' /etc/etckeeper/etckeeper.conf; then
		yes | etckeeper uninit
		pushd /etc
		sed -i -e 's/^VCS="bzr"/VCS="git"/g' etckeeper.conf
		etckeeper init
		popd /etc
	fi
	if ! git config --global user.name; then
		git config --global user.name "root"
	fi
	if ! git config --global user.email; then
		git config --global user.email "root@$(hostname)"
	fi
}

# Update source list to local mirror

__script_env $@
__script_bootstrap $@
__system_setup_sudo_nopass
__system_setup_repo

apt-get -yq update
apt-get install -y unattended-upgrades ntp git etckeeper

__system_install_etckepper
__system_config_tz
__system_setup_repo_comment

apt-get autoremove
aptitude full-upgrade -y

# Misc setting
sudo su - ${SUDO_USER} -c \
	"grep -q 'EDITOR=vim' ~/.bashrc || echo 'EDITOR=vim' >> ~/.bashrc"
